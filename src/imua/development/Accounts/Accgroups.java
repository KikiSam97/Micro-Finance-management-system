/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package imua.development.Accounts;

import imua.development.*;
import java.awt.Color;
import java.awt.HeadlessException;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author kimani kogi
 */
public class Accgroups extends javax.swing.JFrame {

    /**
     * Creates new form Accgroups
     */
    public Accgroups() {
        initComponents();
        findUsers();
        findUsers1();
        setTilteImage();
    }
    
    
    
    private void setTilteImage(){
        try {
            Methods n=new Methods();
            String t= n.setTitle();
            this.setTitle(t);
            String i=n.setIconImage();
            this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource(i)));
            
            String col=n.selectcolor();
            Color c=new Color(Integer.parseInt(col));
            jPanel1.setBackground(c);
        } catch (Exception ex) {
            Logger.getLogger(Accgroups.class.getName()).log(Level.SEVERE, null, ex);
        }
}
  public ArrayList<UserAcc> ListUsers()
  {
    ArrayList<UserAcc> usersList = new ArrayList();
    try
    {
        Methods m=new Methods();
        Connection con = m.getConnection();
     // Connection con = getConnection();
      Statement st = con.createStatement();
      String searchQuery = "SELECT * FROM `useracctypes`";
      ResultSet rs = st.executeQuery(searchQuery);
      while (rs.next())
      {
        UserAcc user = new UserAcc(rs.getString("id"), rs.getString("accountname"), rs.getString("appfee"));
        
        usersList.add(user);
      }
      st.close();
      rs.close();
      con.close();
    }
    catch (Exception ex)
    {
      System.out.println(ex.getMessage());
    }
    return usersList;
  }
  
  public void findUsers()
  {
    ArrayList<UserAcc> users = ListUsers();
    DefaultTableModel model = new DefaultTableModel();
    
    model.setColumnIdentifiers(new Object[] { "ID", "Name","Fee" });
    Object[] row = new Object[3];
    for (int i = 0; i < users.size(); i++)
    {
      row[0] = ((UserAcc)users.get(i)).getId();
      row[1] = ((UserAcc)users.get(i)).getAccName();
      row[2] = ((UserAcc)users.get(i)).getAccFee();
     
      
      model.addRow(row);
    }
    this.tableUseAccTypes.setModel(model);
  }
   public ArrayList<UserAcc> ListUsers1()
  {
    ArrayList<UserAcc> usersList = new ArrayList();
    try
    {
        Methods m=new Methods();
        Connection con = m.getConnection();
     // Connection con = getConnection();
      Statement st = con.createStatement();
      String searchQuery = "SELECT * FROM `usergroups`";
      ResultSet rs = st.executeQuery(searchQuery);
      while (rs.next())
      {
        UserAcc user = new UserAcc(rs.getString("id"), rs.getString("groupname"), rs.getString("groupname"));
        
        usersList.add(user);
      }
      st.close();
      rs.close();
      con.close();
    }
    catch (Exception ex)
    {
      System.out.println(ex.getMessage());
    }
    return usersList;
  }
  
  public void findUsers1()
  {
    ArrayList<UserAcc> users = ListUsers1();
    DefaultTableModel model = new DefaultTableModel();
    
    model.setColumnIdentifiers(new Object[] { "ID", "Name" });
    Object[] row = new Object[2];
    for (int i = 0; i < users.size(); i++)
    {
      row[0] = ((UserAcc)users.get(i)).getId();
      row[1] = ((UserAcc)users.get(i)).getAccName();
      
     
      
      model.addRow(row);
    }
    this.tableUserGroups.setModel(model);
  }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableUseAccTypes = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableUserGroups = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        groupName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        groupId = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        accName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        accId = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtFee = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        tableUseAccTypes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tableUseAccTypes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableUseAccTypesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableUseAccTypes);

        tableUserGroups.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tableUserGroups.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableUserGroupsMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tableUserGroups);

        jLabel1.setText("Name");

        jLabel2.setText("Id");

        jButton1.setText("Update");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Add");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel3.setText("Name");

        jLabel4.setText("Id");

        accId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accIdActionPerformed(evt);
            }
        });

        jButton3.setText("Add");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Update");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Delete");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Delete");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("USER ACCOUNT TYPES");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("GROUPS REGISTERD");

        jLabel7.setText("Fee");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel7))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(accName, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE)
                            .addComponent(accId)
                            .addComponent(txtFee))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(34, 34, 34)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(groupName, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(groupId, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton6)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(222, 222, 222)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addGap(199, 199, 199))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jLabel5)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(groupName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(33, 33, 33)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(groupId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(161, 161, 161)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jButton2)
                                    .addComponent(jButton1)
                                    .addComponent(jButton6)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(accName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(38, 38, 38)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(accId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtFee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton3)
                            .addComponent(jButton4)
                            .addComponent(jButton5))))
                .addContainerGap(60, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void accIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_accIdActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
    check();
    }//GEN-LAST:event_jButton3ActionPerformed
private void check(){
    if(accId.getText().isEmpty()||accName.getText().isEmpty()||txtFee.getText().isEmpty()){
        JOptionPane.showMessageDialog(null, "Empty Field Detected");
    }
    else{
        insert();
    }
}
private void check2(){
     if(groupId.getText().isEmpty()||groupName.getText().isEmpty()){
        JOptionPane.showMessageDialog(null, "Empty Field Detected");
    }
    else{
        insert2();
    }
}
    private void tableUseAccTypesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableUseAccTypesMouseClicked
         int i = this.tableUseAccTypes.getSelectedRow();

        TableModel model = this.tableUseAccTypes.getModel();

        this.accId.setText(model.getValueAt(i, 0).toString());

        this.accName.setText(model.getValueAt(i, 1).toString());
         this.txtFee.setText(model.getValueAt(i, 2).toString());

       
    }//GEN-LAST:event_tableUseAccTypesMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       check2();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        update();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
       delete();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       update1();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        delete1();
    }//GEN-LAST:event_jButton6ActionPerformed
 private void formWindowClosed(java.awt.event.WindowEvent evt) {                                  
        //Main.a = 1;
    } 
    private void tableUserGroupsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableUserGroupsMouseClicked
        int i = this.tableUserGroups.getSelectedRow();

        TableModel model = this.tableUserGroups.getModel();

        this.groupId.setText(model.getValueAt(i, 0).toString());

        this.groupName.setText(model.getValueAt(i, 1).toString());
    }//GEN-LAST:event_tableUserGroupsMouseClicked
private void refreshTable(){
     DefaultTableModel model = (DefaultTableModel)this.tableUseAccTypes.getModel();
        DefaultTableModel model1 = (DefaultTableModel)this.tableUseAccTypes.getModel();
     model.setRowCount(0);
      model1.setRowCount(0);
        
     findUsers();
     findUsers1();
}
 public void executeSQlQuery(String query, String message)
  {
   Methods m=new Methods();
        Connection con = m.getConnection();
    try
    {
      Statement st = con.createStatement();
      if (st.executeUpdate(query) == 1)
      {
       
        
        JOptionPane.showMessageDialog(null, message + " Succefully");
        refreshTable();
      }
      else
      {
        JOptionPane.showMessageDialog(null, "Not " + message);
        
      }
      st.close();
      con.close();
    }
    catch (SQLException  ex)
    {
         JOptionPane.showMessageDialog(null, "Not " + ex);
    }
  }

private void delete(){
     if(accId.getText().isEmpty()||accName.getText().isEmpty()){
        JOptionPane.showMessageDialog(null, "Empty Field Detected");
    }
    else{
        
    
 String id=  accId.getText();
                String query = "DELETE FROM `useracctypes`  WHERE `id` = '" +id+"'";
                executeSQlQuery(query, "Deleted");
              clear();
       
     }
}
private void update(){
     if(accId.getText().isEmpty()||accName.getText().isEmpty()){
        JOptionPane.showMessageDialog(null, "Empty Field Detected");
    }
    else{
        
    
   try {
     //  String query = "UPDATE `books` SET `title`='" + this.btitle.getText() + 
     //"',`ediion`='" + this.Bedition.getText() + "',`status`= '" + this.bstatus.getText() + "' WHERE `id` = '" + this.bid.getText() + "'";
      
     // executeSQlQuery(query, "Updated");
            Methods m=new Methods();
            try (Connection connection = m.getConnection()) {
                String query = "UPDATE `useracctypes` SET `accountname`='" + this.accName.getText() + "',`appfee`='" + this.txtFee.getText() + "' WHERE `id` = '" + this.accId.getText() + "'";
                
                try (PreparedStatement pst = connection.prepareStatement(query)) {
                    pst.executeUpdate(query);
                    pst.close();
                    connection.close();
                }
            }
             refreshTable();
              clear();
        } catch (SQLException ex) {
              JOptionPane.showMessageDialog(null, "Error");
            Logger.getLogger(Accgroups.class.getName()).log(Level.SEVERE, null, ex);
        }
     }
}
private void delete1(){
     if(groupId.getText().isEmpty()||groupName.getText().isEmpty()){
        JOptionPane.showMessageDialog(null, "Empty Field Detected");
    }
    else{
        
    
 String id=  groupId.getText();
                String query = "DELETE FROM `usergroups`  WHERE `id` = '" +id+"'";
                executeSQlQuery(query, "Deleted");
              clear();
       
     }
}
private void update1(){
     if(groupId.getText().isEmpty()||groupName.getText().isEmpty()){
        JOptionPane.showMessageDialog(null, "Empty Field Detected");
    }
    else{
        
    
   try {
     //  String query = "UPDATE `books` SET `title`='" + this.btitle.getText() + 
     //"',`ediion`='" + this.Bedition.getText() + "',`status`= '" + this.bstatus.getText() + "' WHERE `id` = '" + this.bid.getText() + "'";
      
     // executeSQlQuery(query, "Updated");
            Methods m=new Methods();
            try (Connection connection = m.getConnection()) {
                String query = "UPDATE `usergroups` SET `groupname`='" + this.groupName.getText() + "' WHERE `id` = '" + this.groupId.getText() + "'";
                
                try (PreparedStatement pst = connection.prepareStatement(query)) {
                    pst.executeUpdate(query);
                    pst.close();
                    connection.close();
                }
            }
             refreshTable();
              clear();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error");
            Logger.getLogger(Accgroups.class.getName()).log(Level.SEVERE, null, ex);
        }
     }
}
    private void  insert(){
    
        try {
            Methods m=new Methods();
            try (Connection connection = m.getConnection()) {
                String query = "INSERT INTO `useracctypes`(`id`, `accountname`, `appfee`) VALUES ('" + this.accId.getText() + "','" + accName.getText() + "','" + txtFee.getText() + "')";
                
                try (PreparedStatement pst = connection.prepareStatement(query)) {
                    pst.executeUpdate(query);
                    pst.close();
                    connection.close();
                }
            }
             refreshTable();
             clear();
        } catch (SQLException ex) {
              JOptionPane.showMessageDialog(null, "Error");
            Logger.getLogger(Accgroups.class.getName()).log(Level.SEVERE, null, ex);
        }
}
     private void  insert2(){
    
        try {
            Methods m=new Methods();
            try (Connection connection = m.getConnection()) {
                String query = "INSERT INTO `usergroups`(`id`, `groupname`) VALUES ('" + this.groupId.getText() + "','" + groupName.getText() + "')";
                
                try (PreparedStatement pst = connection.prepareStatement(query)) {
                    pst.executeUpdate(query);
                    
                    pst.close();
                    connection.close();
                }
                
            }
             refreshTable();
             clear();
        } catch (SQLException ex) {
              JOptionPane.showMessageDialog(null, "Error");
            Logger.getLogger(Accgroups.class.getName()).log(Level.SEVERE, null, ex);
        }
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Accgroups.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Accgroups.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Accgroups.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Accgroups.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Accgroups().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField accId;
    private javax.swing.JTextField accName;
    private javax.swing.JTextField groupId;
    private javax.swing.JTextField groupName;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tableUseAccTypes;
    private javax.swing.JTable tableUserGroups;
    private javax.swing.JTextField txtFee;
    // End of variables declaration//GEN-END:variables
public void clear(){
    accId.setText("");
    accName.setText("");
    groupId.setText("");
    groupName.setText("");
    txtFee.setText("");
    refreshTable();
   // refreshTable();
}

}
